// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cba/v1/credit_bureau_adapter.proto

package cba

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for credit report and score retrieval.
type GetCreditReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirstName     string                 `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	DateOfBirth   string                 `protobuf:"bytes,3,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"` // Format: YYYY-MM-DD
	NationalId    string                 `protobuf:"bytes,4,opt,name=national_id,json=nationalId,proto3" json:"national_id,omitempty"`      // National ID Number
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCreditReportRequest) Reset() {
	*x = GetCreditReportRequest{}
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreditReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditReportRequest) ProtoMessage() {}

func (x *GetCreditReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditReportRequest.ProtoReflect.Descriptor instead.
func (*GetCreditReportRequest) Descriptor() ([]byte, []int) {
	return file_cba_v1_credit_bureau_adapter_proto_rawDescGZIP(), []int{0}
}

func (x *GetCreditReportRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetCreditReportRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetCreditReportRequest) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetCreditReportRequest) GetNationalId() string {
	if x != nil {
		return x.NationalId
	}
	return ""
}

// Response message for credit report retrieval.
type GetCreditReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      string                 `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	FullName      string                 `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	DateOfBirth   string                 `protobuf:"bytes,3,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"` // Format: YYYY-MM-DD
	Accounts      []*Account             `protobuf:"bytes,4,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Inquiries     []*Inquiry             `protobuf:"bytes,5,rep,name=inquiries,proto3" json:"inquiries,omitempty"`
	PublicRecords []*PublicRecord        `protobuf:"bytes,6,rep,name=public_records,json=publicRecords,proto3" json:"public_records,omitempty"`
	ReportDate    string                 `protobuf:"bytes,7,opt,name=report_date,json=reportDate,proto3" json:"report_date,omitempty"` // Format: YYYY-MM-DD
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCreditReportResponse) Reset() {
	*x = GetCreditReportResponse{}
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreditReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditReportResponse) ProtoMessage() {}

func (x *GetCreditReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditReportResponse.ProtoReflect.Descriptor instead.
func (*GetCreditReportResponse) Descriptor() ([]byte, []int) {
	return file_cba_v1_credit_bureau_adapter_proto_rawDescGZIP(), []int{1}
}

func (x *GetCreditReportResponse) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *GetCreditReportResponse) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *GetCreditReportResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetCreditReportResponse) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *GetCreditReportResponse) GetInquiries() []*Inquiry {
	if x != nil {
		return x.Inquiries
	}
	return nil
}

func (x *GetCreditReportResponse) GetPublicRecords() []*PublicRecord {
	if x != nil {
		return x.PublicRecords
	}
	return nil
}

func (x *GetCreditReportResponse) GetReportDate() string {
	if x != nil {
		return x.ReportDate
	}
	return ""
}

// Response message for credit score retrieval.
type GetCreditScoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirstName     string                 `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	DateOfBirth   string                 `protobuf:"bytes,3,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"` // Format: YYYY-MM-DD
	NationalId    string                 `protobuf:"bytes,4,opt,name=national_id,json=nationalId,proto3" json:"national_id,omitempty"`      // National ID Number
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCreditScoreRequest) Reset() {
	*x = GetCreditScoreRequest{}
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreditScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditScoreRequest) ProtoMessage() {}

func (x *GetCreditScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditScoreRequest.ProtoReflect.Descriptor instead.
func (*GetCreditScoreRequest) Descriptor() ([]byte, []int) {
	return file_cba_v1_credit_bureau_adapter_proto_rawDescGZIP(), []int{2}
}

func (x *GetCreditScoreRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetCreditScoreRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetCreditScoreRequest) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetCreditScoreRequest) GetNationalId() string {
	if x != nil {
		return x.NationalId
	}
	return ""
}

type GetCreditScoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FullName      string                 `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	DateOfBirth   string                 `protobuf:"bytes,2,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"` // Format: YYYY-MM-DD
	CreditScore   int32                  `protobuf:"varint,3,opt,name=credit_score,json=creditScore,proto3" json:"credit_score,omitempty"`
	ScoreDate     string                 `protobuf:"bytes,4,opt,name=score_date,json=scoreDate,proto3" json:"score_date,omitempty"` // Format: YYYY-MM-DD
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCreditScoreResponse) Reset() {
	*x = GetCreditScoreResponse{}
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreditScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreditScoreResponse) ProtoMessage() {}

func (x *GetCreditScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreditScoreResponse.ProtoReflect.Descriptor instead.
func (*GetCreditScoreResponse) Descriptor() ([]byte, []int) {
	return file_cba_v1_credit_bureau_adapter_proto_rawDescGZIP(), []int{3}
}

func (x *GetCreditScoreResponse) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *GetCreditScoreResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetCreditScoreResponse) GetCreditScore() int32 {
	if x != nil {
		return x.CreditScore
	}
	return 0
}

func (x *GetCreditScoreResponse) GetScoreDate() string {
	if x != nil {
		return x.ScoreDate
	}
	return ""
}

type Account struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountType   string                 `protobuf:"bytes,1,opt,name=account_type,json=accountType,proto3" json:"account_type,omitempty"` // e.g., "Credit Card", "Mortgage"
	AccountNumber string                 `protobuf:"bytes,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                              // e.g., "Open", "Closed", "Delinquent"
	Balance       string                 `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance,omitempty"`                            // e.g., "$5000"
	CreditLimit   string                 `protobuf:"bytes,5,opt,name=credit_limit,json=creditLimit,proto3" json:"credit_limit,omitempty"` // e.g., "$10000"
	OpenedDate    string                 `protobuf:"bytes,6,opt,name=opened_date,json=openedDate,proto3" json:"opened_date,omitempty"`    // Format: YYYY-MM-DD
	ClosedDate    string                 `protobuf:"bytes,7,opt,name=closed_date,json=closedDate,proto3" json:"closed_date,omitempty"`    // Format: YYYY-MM-DD, if applicable
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_cba_v1_credit_bureau_adapter_proto_rawDescGZIP(), []int{4}
}

func (x *Account) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *Account) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *Account) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Account) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *Account) GetCreditLimit() string {
	if x != nil {
		return x.CreditLimit
	}
	return ""
}

func (x *Account) GetOpenedDate() string {
	if x != nil {
		return x.OpenedDate
	}
	return ""
}

func (x *Account) GetClosedDate() string {
	if x != nil {
		return x.ClosedDate
	}
	return ""
}

type Inquiry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InquiryType   string                 `protobuf:"bytes,1,opt,name=inquiry_type,json=inquiryType,proto3" json:"inquiry_type,omitempty"` // e.g., "Hard", "Soft"
	Date          string                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`                                  // Format: YYYY-MM-DD
	Institution   string                 `protobuf:"bytes,3,opt,name=institution,proto3" json:"institution,omitempty"`                    // Name of the institution making the inquiry
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Inquiry) Reset() {
	*x = Inquiry{}
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Inquiry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inquiry) ProtoMessage() {}

func (x *Inquiry) ProtoReflect() protoreflect.Message {
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inquiry.ProtoReflect.Descriptor instead.
func (*Inquiry) Descriptor() ([]byte, []int) {
	return file_cba_v1_credit_bureau_adapter_proto_rawDescGZIP(), []int{5}
}

func (x *Inquiry) GetInquiryType() string {
	if x != nil {
		return x.InquiryType
	}
	return ""
}

func (x *Inquiry) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Inquiry) GetInstitution() string {
	if x != nil {
		return x.Institution
	}
	return ""
}

type PublicRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordType    string                 `protobuf:"bytes,1,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"` // e.g., "Bankruptcy", "Lien"
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	DateFiled     string                 `protobuf:"bytes,3,opt,name=date_filed,json=dateFiled,proto3" json:"date_filed,omitempty"` // Format: YYYY-MM-DD
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                        // e.g., "Open", "Closed"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicRecord) Reset() {
	*x = PublicRecord{}
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicRecord) ProtoMessage() {}

func (x *PublicRecord) ProtoReflect() protoreflect.Message {
	mi := &file_cba_v1_credit_bureau_adapter_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicRecord.ProtoReflect.Descriptor instead.
func (*PublicRecord) Descriptor() ([]byte, []int) {
	return file_cba_v1_credit_bureau_adapter_proto_rawDescGZIP(), []int{6}
}

func (x *PublicRecord) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *PublicRecord) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PublicRecord) GetDateFiled() string {
	if x != nil {
		return x.DateFiled
	}
	return ""
}

func (x *PublicRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_cba_v1_credit_bureau_adapter_proto protoreflect.FileDescriptor

const file_cba_v1_credit_bureau_adapter_proto_rawDesc = "" +
	"\n" +
	"\"cba/v1/credit_bureau_adapter.proto\x12\x06cba.v1\x1a$gnostic/openapi/v3/annotations.proto\x1a\x1cgoogle/api/annotations.proto\"\x99\x01\n" +
	"\x16GetCreditReportRequest\x12\x1d\n" +
	"\n" +
	"first_name\x18\x01 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x02 \x01(\tR\blastName\x12\"\n" +
	"\rdate_of_birth\x18\x03 \x01(\tR\vdateOfBirth\x12\x1f\n" +
	"\vnational_id\x18\x04 \x01(\tR\n" +
	"nationalId\"\xb1\x02\n" +
	"\x17GetCreditReportResponse\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\x12\x1b\n" +
	"\tfull_name\x18\x02 \x01(\tR\bfullName\x12\"\n" +
	"\rdate_of_birth\x18\x03 \x01(\tR\vdateOfBirth\x12+\n" +
	"\baccounts\x18\x04 \x03(\v2\x0f.cba.v1.AccountR\baccounts\x12-\n" +
	"\tinquiries\x18\x05 \x03(\v2\x0f.cba.v1.InquiryR\tinquiries\x12;\n" +
	"\x0epublic_records\x18\x06 \x03(\v2\x14.cba.v1.PublicRecordR\rpublicRecords\x12\x1f\n" +
	"\vreport_date\x18\a \x01(\tR\n" +
	"reportDate\"\x98\x01\n" +
	"\x15GetCreditScoreRequest\x12\x1d\n" +
	"\n" +
	"first_name\x18\x01 \x01(\tR\tfirstName\x12\x1b\n" +
	"\tlast_name\x18\x02 \x01(\tR\blastName\x12\"\n" +
	"\rdate_of_birth\x18\x03 \x01(\tR\vdateOfBirth\x12\x1f\n" +
	"\vnational_id\x18\x04 \x01(\tR\n" +
	"nationalId\"\x9b\x01\n" +
	"\x16GetCreditScoreResponse\x12\x1b\n" +
	"\tfull_name\x18\x01 \x01(\tR\bfullName\x12\"\n" +
	"\rdate_of_birth\x18\x02 \x01(\tR\vdateOfBirth\x12!\n" +
	"\fcredit_score\x18\x03 \x01(\x05R\vcreditScore\x12\x1d\n" +
	"\n" +
	"score_date\x18\x04 \x01(\tR\tscoreDate\"\xea\x01\n" +
	"\aAccount\x12!\n" +
	"\faccount_type\x18\x01 \x01(\tR\vaccountType\x12%\n" +
	"\x0eaccount_number\x18\x02 \x01(\tR\raccountNumber\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x18\n" +
	"\abalance\x18\x04 \x01(\tR\abalance\x12!\n" +
	"\fcredit_limit\x18\x05 \x01(\tR\vcreditLimit\x12\x1f\n" +
	"\vopened_date\x18\x06 \x01(\tR\n" +
	"openedDate\x12\x1f\n" +
	"\vclosed_date\x18\a \x01(\tR\n" +
	"closedDate\"b\n" +
	"\aInquiry\x12!\n" +
	"\finquiry_type\x18\x01 \x01(\tR\vinquiryType\x12\x12\n" +
	"\x04date\x18\x02 \x01(\tR\x04date\x12 \n" +
	"\vinstitution\x18\x03 \x01(\tR\vinstitution\"\x88\x01\n" +
	"\fPublicRecord\x12\x1f\n" +
	"\vrecord_type\x18\x01 \x01(\tR\n" +
	"recordType\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"date_filed\x18\x03 \x01(\tR\tdateFiled\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status2\xa4\x02\n" +
	"\x1aCreditBureauAdapterService\x12\x84\x01\n" +
	"\x0fGetCreditReport\x12\x1e.cba.v1.GetCreditReportRequest\x1a\x1f.cba.v1.GetCreditReportResponse\"0\xbaG\x11*\x0fGetCreditReport\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/credit/report\x12\x7f\n" +
	"\x0eGetCreditScore\x12\x1d.cba.v1.GetCreditScoreRequest\x1a\x1e.cba.v1.GetCreditScoreResponse\".\xbaG\x10*\x0eGetCreditScore\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/credit/scoreBl\n" +
	"\n" +
	"com.cba.v1B\x18CreditBureauAdapterProtoP\x01Z\vcba/cba;cba\xa2\x02\x03CXX\xaa\x02\x06Cba.V1\xca\x02\x06Cba\\V1\xe2\x02\x12Cba\\V1\\GPBMetadata\xea\x02\aCba::V1b\x06proto3"

var (
	file_cba_v1_credit_bureau_adapter_proto_rawDescOnce sync.Once
	file_cba_v1_credit_bureau_adapter_proto_rawDescData []byte
)

func file_cba_v1_credit_bureau_adapter_proto_rawDescGZIP() []byte {
	file_cba_v1_credit_bureau_adapter_proto_rawDescOnce.Do(func() {
		file_cba_v1_credit_bureau_adapter_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cba_v1_credit_bureau_adapter_proto_rawDesc), len(file_cba_v1_credit_bureau_adapter_proto_rawDesc)))
	})
	return file_cba_v1_credit_bureau_adapter_proto_rawDescData
}

var file_cba_v1_credit_bureau_adapter_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_cba_v1_credit_bureau_adapter_proto_goTypes = []any{
	(*GetCreditReportRequest)(nil),  // 0: cba.v1.GetCreditReportRequest
	(*GetCreditReportResponse)(nil), // 1: cba.v1.GetCreditReportResponse
	(*GetCreditScoreRequest)(nil),   // 2: cba.v1.GetCreditScoreRequest
	(*GetCreditScoreResponse)(nil),  // 3: cba.v1.GetCreditScoreResponse
	(*Account)(nil),                 // 4: cba.v1.Account
	(*Inquiry)(nil),                 // 5: cba.v1.Inquiry
	(*PublicRecord)(nil),            // 6: cba.v1.PublicRecord
}
var file_cba_v1_credit_bureau_adapter_proto_depIdxs = []int32{
	4, // 0: cba.v1.GetCreditReportResponse.accounts:type_name -> cba.v1.Account
	5, // 1: cba.v1.GetCreditReportResponse.inquiries:type_name -> cba.v1.Inquiry
	6, // 2: cba.v1.GetCreditReportResponse.public_records:type_name -> cba.v1.PublicRecord
	0, // 3: cba.v1.CreditBureauAdapterService.GetCreditReport:input_type -> cba.v1.GetCreditReportRequest
	2, // 4: cba.v1.CreditBureauAdapterService.GetCreditScore:input_type -> cba.v1.GetCreditScoreRequest
	1, // 5: cba.v1.CreditBureauAdapterService.GetCreditReport:output_type -> cba.v1.GetCreditReportResponse
	3, // 6: cba.v1.CreditBureauAdapterService.GetCreditScore:output_type -> cba.v1.GetCreditScoreResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_cba_v1_credit_bureau_adapter_proto_init() }
func file_cba_v1_credit_bureau_adapter_proto_init() {
	if File_cba_v1_credit_bureau_adapter_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cba_v1_credit_bureau_adapter_proto_rawDesc), len(file_cba_v1_credit_bureau_adapter_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cba_v1_credit_bureau_adapter_proto_goTypes,
		DependencyIndexes: file_cba_v1_credit_bureau_adapter_proto_depIdxs,
		MessageInfos:      file_cba_v1_credit_bureau_adapter_proto_msgTypes,
	}.Build()
	File_cba_v1_credit_bureau_adapter_proto = out.File
	file_cba_v1_credit_bureau_adapter_proto_goTypes = nil
	file_cba_v1_credit_bureau_adapter_proto_depIdxs = nil
}
