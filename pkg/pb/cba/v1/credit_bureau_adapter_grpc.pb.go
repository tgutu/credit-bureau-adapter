// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: cba/v1/credit_bureau_adapter.proto

package cba

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	CreditBureauAdapterService_GetBureaus_FullMethodName      = "/cba.v1.CreditBureauAdapterService/GetBureaus"
	CreditBureauAdapterService_GetCreditReport_FullMethodName = "/cba.v1.CreditBureauAdapterService/GetCreditReport"
	CreditBureauAdapterService_GetCreditScore_FullMethodName  = "/cba.v1.CreditBureauAdapterService/GetCreditScore"
)

// CreditBureauAdapterServiceClient is the client API for CreditBureauAdapterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CreditBureauAdapterServiceClient interface {
	// Retrieves a list of supported credit bureaus.
	// No parameters required.
	// Returns a list of credit bureaus with their IDs and names.
	GetBureaus(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetBureausResponse, error)
	// Retrieves a detailed credit report for an individual.
	// Requires personal identification details.
	// Returns a comprehensive credit report including credit history, accounts, and inquiries.
	GetCreditReport(ctx context.Context, in *GetCreditReportRequest, opts ...grpc.CallOption) (*GetCreditReportResponse, error)
	// Retrieves the credit score for an individual.
	// Requires personal identification details.
	// Returns the credit score as an integer value.
	GetCreditScore(ctx context.Context, in *GetCreditScoreRequest, opts ...grpc.CallOption) (*GetCreditScoreResponse, error)
}

type creditBureauAdapterServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCreditBureauAdapterServiceClient(cc grpc.ClientConnInterface) CreditBureauAdapterServiceClient {
	return &creditBureauAdapterServiceClient{cc}
}

func (c *creditBureauAdapterServiceClient) GetBureaus(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetBureausResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetBureausResponse)
	err := c.cc.Invoke(ctx, CreditBureauAdapterService_GetBureaus_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creditBureauAdapterServiceClient) GetCreditReport(ctx context.Context, in *GetCreditReportRequest, opts ...grpc.CallOption) (*GetCreditReportResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetCreditReportResponse)
	err := c.cc.Invoke(ctx, CreditBureauAdapterService_GetCreditReport_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *creditBureauAdapterServiceClient) GetCreditScore(ctx context.Context, in *GetCreditScoreRequest, opts ...grpc.CallOption) (*GetCreditScoreResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetCreditScoreResponse)
	err := c.cc.Invoke(ctx, CreditBureauAdapterService_GetCreditScore_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreditBureauAdapterServiceServer is the server API for CreditBureauAdapterService service.
// All implementations must embed UnimplementedCreditBureauAdapterServiceServer
// for forward compatibility.
type CreditBureauAdapterServiceServer interface {
	// Retrieves a list of supported credit bureaus.
	// No parameters required.
	// Returns a list of credit bureaus with their IDs and names.
	GetBureaus(context.Context, *emptypb.Empty) (*GetBureausResponse, error)
	// Retrieves a detailed credit report for an individual.
	// Requires personal identification details.
	// Returns a comprehensive credit report including credit history, accounts, and inquiries.
	GetCreditReport(context.Context, *GetCreditReportRequest) (*GetCreditReportResponse, error)
	// Retrieves the credit score for an individual.
	// Requires personal identification details.
	// Returns the credit score as an integer value.
	GetCreditScore(context.Context, *GetCreditScoreRequest) (*GetCreditScoreResponse, error)
	mustEmbedUnimplementedCreditBureauAdapterServiceServer()
}

// UnimplementedCreditBureauAdapterServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedCreditBureauAdapterServiceServer struct{}

func (UnimplementedCreditBureauAdapterServiceServer) GetBureaus(context.Context, *emptypb.Empty) (*GetBureausResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBureaus not implemented")
}
func (UnimplementedCreditBureauAdapterServiceServer) GetCreditReport(context.Context, *GetCreditReportRequest) (*GetCreditReportResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCreditReport not implemented")
}
func (UnimplementedCreditBureauAdapterServiceServer) GetCreditScore(context.Context, *GetCreditScoreRequest) (*GetCreditScoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCreditScore not implemented")
}
func (UnimplementedCreditBureauAdapterServiceServer) mustEmbedUnimplementedCreditBureauAdapterServiceServer() {
}
func (UnimplementedCreditBureauAdapterServiceServer) testEmbeddedByValue() {}

// UnsafeCreditBureauAdapterServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CreditBureauAdapterServiceServer will
// result in compilation errors.
type UnsafeCreditBureauAdapterServiceServer interface {
	mustEmbedUnimplementedCreditBureauAdapterServiceServer()
}

func RegisterCreditBureauAdapterServiceServer(s grpc.ServiceRegistrar, srv CreditBureauAdapterServiceServer) {
	// If the following call pancis, it indicates UnimplementedCreditBureauAdapterServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&CreditBureauAdapterService_ServiceDesc, srv)
}

func _CreditBureauAdapterService_GetBureaus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditBureauAdapterServiceServer).GetBureaus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreditBureauAdapterService_GetBureaus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditBureauAdapterServiceServer).GetBureaus(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreditBureauAdapterService_GetCreditReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCreditReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditBureauAdapterServiceServer).GetCreditReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreditBureauAdapterService_GetCreditReport_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditBureauAdapterServiceServer).GetCreditReport(ctx, req.(*GetCreditReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreditBureauAdapterService_GetCreditScore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCreditScoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditBureauAdapterServiceServer).GetCreditScore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CreditBureauAdapterService_GetCreditScore_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditBureauAdapterServiceServer).GetCreditScore(ctx, req.(*GetCreditScoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CreditBureauAdapterService_ServiceDesc is the grpc.ServiceDesc for CreditBureauAdapterService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CreditBureauAdapterService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cba.v1.CreditBureauAdapterService",
	HandlerType: (*CreditBureauAdapterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBureaus",
			Handler:    _CreditBureauAdapterService_GetBureaus_Handler,
		},
		{
			MethodName: "GetCreditReport",
			Handler:    _CreditBureauAdapterService_GetCreditReport_Handler,
		},
		{
			MethodName: "GetCreditScore",
			Handler:    _CreditBureauAdapterService_GetCreditScore_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cba/v1/credit_bureau_adapter.proto",
}
